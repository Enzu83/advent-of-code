# Custom input
input_data = """029A
980A
179A
456A
379A"""
input_data = input_data.split('\n')


# Input from file
# input_data = open("input.txt").read().split('\n')
# input_data.pop()


# Formatting

# current_digit: {targeted_digit: (direction, next_digit)}
numeric_moves = {
    '1': {
        '0': ('>', '2'),
        '2': ('>', '2'),
        '5': ('>', '2'),
        '8': ('>', '2'),
        'A': ('>', '2'),
        '3': ('>', '2'),
        '6': ('>', '2'),
        '9': ('>', '2'),

        '4': ('^', '4'),
        '7': ('^', '4'),
    },

    '4': {
        '0': ('>', '5'),
        '2': ('>', '5'),
        '5': ('>', '5'),
        '8': ('>', '5'),
        'A': ('>', '5'),
        '3': ('>', '5'),
        '6': ('>', '5'),
        '9': ('>', '5'), 

        '7': ('^', '7'),
        '1': ('v', '1'),
    },

    '7': {
        '0': ('>', '8'),
        '2': ('>', '8'),
        '5': ('>', '8'),
        '8': ('>', '8'),
        'A': ('>', '8'),
        '3': ('>', '8'),
        '6': ('>', '8'),
        '9': ('>', '8'),

        '1': ('v', '4'),
        '4': ('v', '4'),
    },
    
    '0': {
        'A': ('>', 'A'),
        '3': ('>', 'A'),
        '6': ('>', 'A'),
        '9': ('>', 'A'),

        '1': ('^', '2'),
        '4': ('^', '2'),
        '7': ('^', '2'),
        '2': ('^', '2'),
        '5': ('^', '2'),
        '8': ('^', '2'),
    },

    '2': {
        '1': ('<', '1'),
        '4': ('<', '1'),
        '7': ('<', '1'),

        'A': ('>', '3'),
        '3': ('>', '3'),
        '6': ('>', '3'),
        '9': ('>', '3'),

        '5': ('^', '5'),
        '8': ('^', '5'),

        '0': ('v', '0'),
    },

    '5': {
        '1': ('<', '4'),
        '4': ('<', '4'),
        '7': ('<', '4'),

        'A': ('>', '6'),
        '3': ('>', '6'),
        '6': ('>', '6'),
        '9': ('>', '6'),

        '8': ('^', '8'),

        '0': ('v', '2'),
        '2': ('v', '2'),
    },

    '8': {
        '1': ('<', '7'),
        '4': ('<', '7'),
        '7': ('<', '7'),

        'A': ('>', '9'),
        '3': ('>', '9'),
        '6': ('>', '9'),
        '9': ('>', '9'),

        '0': ('v', '5'),
        '2': ('v', '5'),
        '5': ('v', '5'),
    },

    'A': {
        '1': ('<', '0'),
        '4': ('<', '0'),
        '7': ('<', '0'),
        '0': ('<', '0'),
        '2': ('<', '0'),
        '5': ('<', '0'),
        '8': ('<', '0'),

        '3': ('^', '3'),
        '6': ('^', '3'),
        '9': ('^', '3'),
    },

    '3': {
        '1': ('<', '2'),
        '4': ('<', '2'),
        '7': ('<', '2'),
        '0': ('<', '2'),
        '2': ('<', '2'),
        '5': ('<', '2'),
        '8': ('<', '2'),

        '6': ('^', '6'),
        '9': ('^', '6'),

        'A': ('v', 'A'),
    },

    '6': {
        '1': ('<', '5'),
        '4': ('<', '5'),
        '7': ('<', '5'),
        '0': ('<', '5'),
        '2': ('<', '5'),
        '5': ('<', '5'),
        '8': ('<', '5'),

        '9': ('^', '9'),

        '3': ('v', '3'),
        'A': ('v', '3'),
    },

    '9': {
        '1': ('<', '8'),
        '4': ('<', '8'),
        '7': ('<', '8'),
        '0': ('<', '8'),
        '2': ('<', '8'),
        '5': ('<', '8'),
        '8': ('<', '8'),

        '3': ('v', '6'),
        '6': ('v', '6'),
        'A': ('v', '6'),
    },
}

directional_moves = {
    '<': {
        'v': ('>', 'v'),
        '^': ('>', 'v'),
        '>': ('>', 'v'),
        'A': ('>', 'v'),
    },

    'v': {
        '<': ('<', '<'),

        '>': ('>', '>'),
        'A': ('>', '>'),

        '^': ('^', '^'),
    },

    '^': {
        '>': ('>', 'A'),
        'A': ('>', 'A'),

        '<': ('v', 'v'),
        'v': ('v', 'v'),
    },

    '>': {
        '<': ('<', 'v'),
        'v': ('<', 'v'),
        '^': ('<', 'v'),

        'A': ('^', 'A'),
    },

    'A': {
        '<': ('<', '^'),
        'v': ('<', '^'),
        '^': ('<', '^'),

        '>': ('v', '>'),
    },
}


# Functions

def getPath(moves, start, end):
    path = ""

    while start != end:
        step, start = moves[start][end]
        
        path += step

    return path


# Code

code = input_data[0]

print(code, len(code))

path = getPath(numeric_moves, 'A', code[0]) + 'A'


for i in range(1, len(code)):
    path += getPath(numeric_moves, code[i-1], code[i]) + 'A'

print(path, len(path))

path2 = getPath(directional_moves, 'A', path[0]) + 'A'

for i in range(1, len(path)):
    path2 += getPath(directional_moves, path[i-1], path[i]) + 'A'

print(path2, len(path2))

path3 = getPath(directional_moves, 'A', path2[0]) + 'A'

for i in range(1, len(path2)):
    path3 += getPath(directional_moves, path2[i-1], path2[i]) + 'A'

print(path3, len(path3))